name: Build driver
on:
  push:
    branches:
      - 'master'
      - 'releases/**'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: limelight
            script: ./install_limelight.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2023-12-11/2023-12-11-raspios-bookworm-arm64-lite.img.xz
          - name: raspi
            script: ./install_pi.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2023-12-11/2023-12-11-raspios-bookworm-arm64-lite.img.xz
          - name: opi5
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v1.30/ubuntu-22.04.3-preinstalled-server-arm64-orangepi-5.img.xz

    name: "Build for ${{ matrix.name }}"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Fetch tags
      run: git fetch --tags --force

    - uses: pguyot/arm-runner-action@HEAD
      id: install_deps
      with:
        image_additional_mb: 1500
        base_image: ${{ matrix.base_image }}
        commands: ${{ matrix.script }}

    - name: Compress built image
      run: |
        export IMAGE=photonvision_$(git describe --tags --match=v*)_${{ matrix.name }}.img
        mv ${{ steps.install_deps.outputs.image }} $RUNNER_TEMP/$IMAGE
        tar -cJf $IMAGE.tar.xz $RUNNER_TEMP/$IMAGE

    - uses: actions/upload-artifact@master
      with:
        name: photon-image-${{ matrix.name }}
        path: "*.tar.xz"
